import { QwikMouseEvent } from '@builder.io/qwik';
import { FocusTrap } from 'focus-trap';
export type WidthState = {
    width: number | null;
};
/**
 * Traps the focus of the given Modal
 * @returns FocusTrap
 */
export declare function trapFocus(modal: HTMLDialogElement): FocusTrap;
export declare function activateFocusTrap(focusTrap: FocusTrap | null): void;
export declare function deactivateFocusTrap(focusTrap: FocusTrap | null): void;
/**
 * Shows the given Modal.
 * Applies a CSS-Class to animate the modal-showing.
 * Calls the given callback that is executed after the Modal has been opened.
 */
export declare function showModal(modal: HTMLDialogElement): Promise<void>;
/**
 * Closes the given Modal.
 * Applies a CSS-Class to animate the Modal-closing.
 * Calls the given callback that is executed after the Modal has been closed.
 */
export declare function closeModal(modal: HTMLDialogElement): Promise<void>;
/**
 * Determines if the backdrop of the Modal has been clicked.
 */
export declare function wasModalBackdropClicked(modal: HTMLDialogElement | undefined, clickEvent: QwikMouseEvent): boolean;
export declare function overrideNativeDialogEscapeBehaviorWith(continuation: () => void): (e: KeyboardEvent) => void;
/**
 * Adds CSS-Class to support modal-opening-animation
 */
export declare function supportShowAnimation(modal: HTMLDialogElement): void;
/**
 * Listens for animation/transition events in order to
 * remove Animation-CSS-Classes after animation/transition ended.
 */
export declare function supportClosingAnimation(modal: HTMLDialogElement, afterAnimate: () => void): void;
