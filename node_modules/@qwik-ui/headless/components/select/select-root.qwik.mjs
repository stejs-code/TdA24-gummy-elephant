import { componentQrl, inlinedQrl, _jsxBranch, useSignal, useStore, useContextProvider, useOnDocument, useLexicalScope, useVisibleTaskQrl, _jsxS, _jsxC, Slot } from "@builder.io/qwik";
import { computePosition, flip } from "@floating-ui/dom";
import { VisuallyHidden } from "../../utils/visually-hidden.qwik.mjs";
import SelectContextId from "./select-context-id.qwik.mjs";
import { NativeSelect } from "./select-native-select.qwik.mjs";
const SelectRoot = /* @__PURE__ */ componentQrl(/* @__PURE__ */ inlinedQrl((props) => {
  _jsxBranch();
  const rootRefSig = useSignal();
  const optionsStore = useStore([]);
  const selectedOptionSig = useSignal("");
  const isOpenSig = useSignal(false);
  const triggerRefSig = useSignal();
  const listBoxRefSig = useSignal();
  const isListboxHiddenSig = useSignal(true);
  const selectContext = {
    optionsStore,
    selectedOptionSig,
    isOpenSig,
    triggerRefSig,
    listBoxRefSig,
    isListboxHiddenSig
  };
  useContextProvider(SelectContextId, selectContext);
  useOnDocument("click", /* @__PURE__ */ inlinedQrl((e) => {
    const [rootRefSig2, selectContext2] = useLexicalScope();
    const target = e.target;
    if (selectContext2.isOpenSig.value === true && !rootRefSig2.value?.contains(target))
      selectContext2.isOpenSig.value = false;
  }, "SelectRoot_component_useOnDocument_COnj037onYs", [
    rootRefSig,
    selectContext
  ]));
  useVisibleTaskQrl(/* @__PURE__ */ inlinedQrl(function setKeyHandler({ cleanup }) {
    const [rootRefSig2, selectContext2] = useLexicalScope();
    function keyHandler(e) {
      e.preventDefault();
      if (e.key === "Escape")
        selectContext2.isOpenSig.value = false;
    }
    rootRefSig2.value?.addEventListener("keydown", keyHandler);
    cleanup(() => {
      rootRefSig2.value?.removeEventListener("keydown", keyHandler);
    });
  }, "SelectRoot_component_useVisibleTask_pNx9pkBC1tI", [
    rootRefSig,
    selectContext
  ]));
  const updatePosition$ = /* @__PURE__ */ inlinedQrl((referenceEl, floatingEl) => {
    computePosition(referenceEl, floatingEl, {
      placement: "bottom",
      middleware: [
        flip()
      ]
    }).then(({ x, y }) => {
      Object.assign(floatingEl.style, {
        left: `${x}px`,
        top: `${y}px`
      });
    });
  }, "SelectRoot_component_updatePosition_Bp5svGmsvFc");
  useVisibleTaskQrl(/* @__PURE__ */ inlinedQrl(async function toggleSelectListBox({ track }) {
    const [isListboxHiddenSig2, selectContext2, updatePosition$2] = useLexicalScope();
    const trigger = track(() => selectContext2.triggerRefSig.value);
    const listBox = track(() => selectContext2.listBoxRefSig.value);
    const expanded = track(() => selectContext2.isOpenSig.value);
    if (!trigger || !listBox)
      return;
    if (expanded === true) {
      listBox.style.visibility = "hidden";
      await updatePosition$2(trigger, listBox);
      listBox.style.visibility = "visible";
      isListboxHiddenSig2.value = false;
      listBox?.focus();
    }
    if (expanded === false)
      trigger?.focus();
  }, "SelectRoot_component_useVisibleTask_1_N7H39giT6pA", [
    isListboxHiddenSig,
    selectContext,
    updatePosition$
  ]));
  useVisibleTaskQrl(/* @__PURE__ */ inlinedQrl(function collectOptions({ track }) {
    const [selectContext2] = useLexicalScope();
    const listBox = track(() => selectContext2.listBoxRefSig.value);
    if (listBox) {
      const collectedOptions = Array.from(listBox.querySelectorAll('[role="option"]'));
      selectContext2.optionsStore.push(...collectedOptions);
    }
  }, "SelectRoot_component_useVisibleTask_2_tytKysVfH9M", [
    selectContext
  ]));
  return /* @__PURE__ */ _jsxS("div", {
    ref: rootRefSig,
    ...props,
    children: [
      /* @__PURE__ */ _jsxC(Slot, null, 3, "Bs_0"),
      props.required ? /* @__PURE__ */ _jsxC(VisuallyHidden, {
        children: /* @__PURE__ */ _jsxC(NativeSelect, null, 3, "Bs_1")
      }, 1, "Bs_2") : null
    ]
  }, null, 0, "Bs_3");
}, "SelectRoot_component_1P8uqC3afXw"));
export {
  SelectRoot
};
