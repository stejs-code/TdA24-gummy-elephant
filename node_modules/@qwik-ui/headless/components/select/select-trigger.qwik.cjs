"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const qwik = require("@builder.io/qwik");
const selectContextId = require("./select-context-id.qwik.cjs");
const SelectTrigger = /* @__PURE__ */ qwik.componentQrl(/* @__PURE__ */ qwik.inlinedQrl((props) => {
  const selectContext = qwik.useContext(selectContextId);
  const triggerRef = qwik.useSignal();
  selectContext.triggerRefSig = triggerRef;
  qwik.useVisibleTaskQrl(/* @__PURE__ */ qwik.inlinedQrl(function setClickHandler({ cleanup }) {
    const [selectContext2, triggerRef2] = qwik.useLexicalScope();
    function clickHandler(e) {
      e.preventDefault();
      selectContext2.isOpenSig.value = !selectContext2.isOpenSig.value;
    }
    triggerRef2.value?.addEventListener("click", clickHandler);
    cleanup(() => {
      triggerRef2.value?.removeEventListener("click", clickHandler);
    });
  }, "SelectTrigger_component_useVisibleTask_80qoWIXMIfc", [
    selectContext,
    triggerRef
  ]));
  qwik.useVisibleTaskQrl(/* @__PURE__ */ qwik.inlinedQrl(function setKeyHandler({ cleanup }) {
    const [selectContext2, triggerRef2] = qwik.useLexicalScope();
    function keyHandler(e) {
      if (e.key === "Home" || e.key === "End")
        e.preventDefault();
      if (e.key === "ArrowDown" || e.key === "ArrowUp" || e.key === "Enter" || e.key === " ")
        selectContext2.isOpenSig.value = true;
    }
    triggerRef2.value?.addEventListener("keydown", keyHandler);
    cleanup(() => {
      triggerRef2.value?.removeEventListener("keydown", keyHandler);
    });
  }, "SelectTrigger_component_useVisibleTask_1_wQEhBlyku50", [
    selectContext,
    triggerRef
  ]));
  return /* @__PURE__ */ qwik._jsxS("button", {
    ref: triggerRef,
    ...props,
    children: /* @__PURE__ */ qwik._jsxC(qwik.Slot, null, 3, "VR_0")
  }, {
    "aria-expanded": qwik._fnSignal((p0) => p0.isOpenSig.value, [
      selectContext
    ], "p0.isOpenSig.value")
  }, 0, "VR_1");
}, "SelectTrigger_component_QNah0rGW5hg"));
exports.SelectTrigger = SelectTrigger;
