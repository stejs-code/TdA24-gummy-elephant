"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const qwik = require("@builder.io/qwik");
const slider = require("./slider.qwik.cjs");
const clamp = (value, min, max) => {
  return Math.min(max, Math.max(value, min));
};
const SliderThumb = /* @__PURE__ */ qwik.componentQrl(/* @__PURE__ */ qwik.inlinedQrl((props) => {
  const mouseDownHappenedSignal = qwik.useSignal(false);
  const contextService = qwik.useContext(slider.sliderContext);
  const handleMouseDown = /* @__PURE__ */ qwik.inlinedQrl((e) => {
    const [contextService2, mouseDownHappenedSignal2] = qwik.useLexicalScope();
    if (contextService2.positionX.value)
      contextService2.value.value = clamp(e.pageX - contextService2.positionX.value, contextService2.min.value, contextService2.max.value);
    mouseDownHappenedSignal2.value = true;
  }, "SliderThumb_component_handleMouseDown_D8WvLnKHNUw", [
    contextService,
    mouseDownHappenedSignal
  ]);
  qwik.useOnWindow("mousemove", /* @__PURE__ */ qwik.inlinedQrl((e) => {
    const [contextService2, mouseDownHappenedSignal2] = qwik.useLexicalScope();
    if (contextService2.positionX.value && mouseDownHappenedSignal2.value)
      contextService2.value.value = clamp(e.pageX - contextService2.positionX.value, contextService2.min.value, contextService2.max.value);
  }, "SliderThumb_component_useOnWindow_kd2cGCnxV3Y", [
    contextService,
    mouseDownHappenedSignal
  ]));
  qwik.useOnWindow("mouseup", /* @__PURE__ */ qwik.inlinedQrl((e) => {
    const [contextService2, mouseDownHappenedSignal2] = qwik.useLexicalScope();
    if (contextService2.positionX.value && mouseDownHappenedSignal2.value)
      contextService2.value.value = clamp(e.pageX - contextService2.positionX.value, contextService2.min.value, contextService2.max.value);
    mouseDownHappenedSignal2.value = false;
  }, "SliderThumb_component_useOnWindow_1_mV7WaK4570w", [
    contextService,
    mouseDownHappenedSignal
  ]));
  return /* @__PURE__ */ qwik._jsxQ("div", {
    style: `
        width: 20px;
        height: 20px;
        border-radius: 20px;
        background: rgba(0, 0, 250);
        position: absolute;
        transform: translateX(-50%) translateY(-50%);
        top: 50%;
        left: ${contextService.percentage.value}%;
        ${props.style ?? ""}
      `
  }, {
    onMouseDown$: handleMouseDown
  }, /* @__PURE__ */ qwik._jsxC(qwik.Slot, null, 3, "fJ_0"), 1, "fJ_1");
}, "SliderThumb_component_MhzlhYr2v00"));
exports.SliderThumb = SliderThumb;
exports.clamp = clamp;
