import { createContextId, componentQrl, inlinedQrl, useSignal, useVisibleTaskQrl, useLexicalScope, useContextProvider, _jsxQ, _fnSignal, _jsxC, Slot } from "@builder.io/qwik";
const getPercentage = (value, min = 0, max = 100) => {
  return (value - min) * 100 / (max - min);
};
const sliderContext = createContextId("slider");
const Slider = /* @__PURE__ */ componentQrl(/* @__PURE__ */ inlinedQrl((props) => {
  const rootPositionRef = useSignal();
  const sliderValue = useSignal(props.value ?? 0);
  const minSignal = useSignal(props.min ?? 0);
  const maxSignal = useSignal(props.max ?? 100);
  const positionXSignal = useSignal();
  const percentageSignal = useSignal(getPercentage(props.value ?? 0, props.min ?? 0, props.max ?? 100));
  const contextService = {
    value: sliderValue,
    min: minSignal,
    max: maxSignal,
    positionX: positionXSignal,
    percentage: percentageSignal
  };
  useVisibleTaskQrl(/* @__PURE__ */ inlinedQrl(async ({ track }) => {
    const [contextService2, rootPositionRef2] = useLexicalScope();
    track(() => rootPositionRef2);
    contextService2.positionX.value = rootPositionRef2.value?.getBoundingClientRect().x;
  }, "Slider_component_useVisibleTask_NP0ylIsByoU", [
    contextService,
    rootPositionRef
  ]));
  useVisibleTaskQrl(/* @__PURE__ */ inlinedQrl(async ({ track }) => {
    const [contextService2, props2, sliderValue2] = useLexicalScope();
    const newValue = track(() => sliderValue2.value);
    if (props2.onChange$)
      props2.onChange$(newValue);
    contextService2.percentage.value = getPercentage(newValue, props2.min ?? 0, props2.max ?? 100);
  }, "Slider_component_useVisibleTask_1_R0adHmt3YDo", [
    contextService,
    props,
    sliderValue
  ]));
  useContextProvider(sliderContext, contextService);
  return /* @__PURE__ */ _jsxQ("div", {
    ref: rootPositionRef,
    style: `
          display: inline-block;
          position: relative;
          border: solid 1px rgb(178,178,178);
          border-radius: 4px;
          background: rgb(239,239,239);
          width: 100px;
          height: 6px;
          ${props.style ?? ""}
        `
  }, {
    class: _fnSignal((p0) => p0.class, [
      props
    ], "p0.class")
  }, /* @__PURE__ */ _jsxC(Slot, null, 3, "aU_0"), 1, "aU_1");
}, "Slider_component_kkWQbL6dvII"));
export {
  Slider,
  getPercentage,
  sliderContext
};
