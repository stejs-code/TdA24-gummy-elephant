import { type ContextId, type QRL } from '@builder.io/qwik';
import { type JSXNode } from '@builder.io/qwik/jsx-runtime';
export declare const openPortalContextId: ContextId<(id: string, elementToTeleport: JSXNode, contexts?: Array<ContextPair<unknown>>) => Promise<QRL<() => void>>>;
export type ContextPair<T = unknown> = {
    id: ContextId<T>;
    value: T;
};
export declare const closePortalContextId: ContextId<QRL<() => void>>;
export declare const QwikUIProvider: import("@builder.io/qwik").Component<{}>;
/**
 * IMPORTANT: In order for the <Portal> to correctly render in SSR, it needs
 * to be rendered AFTER the call to open portal. (Setting content to portal
 * AFTER the portal is rendered can't be done in SSR, because it is not possible
 * to return back to the <Portal/> after it has been streamed to the client.)
 */
export declare const Portal: import("@builder.io/qwik").Component<{
    id: string;
}>;
export declare const WrapJsxInContext: import("@builder.io/qwik").Component<{
    elementToTeleport: JSXNode;
    contextPairs: Array<ContextPair<any>>;
}>;
