"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const qwik = require("@builder.io/qwik");
const jsxRuntime = require("@builder.io/qwik/jsx-runtime");
const openPortalContextId = qwik.createContextId("PortalProviderAPI");
const closePortalContextId = qwik.createContextId("PortalCloseAPI");
const portalInfoListContextId = qwik.createContextId("Portals");
const QwikUIProvider = /* @__PURE__ */ qwik.componentQrl(/* @__PURE__ */ qwik.inlinedQrl(() => {
  const portalInfoListSig = qwik.useSignal([]);
  qwik.useContextProvider(portalInfoListContextId, portalInfoListSig);
  qwik.useContextProvider(openPortalContextId, /* @__PURE__ */ qwik.inlinedQrl((id, elementToTeleport, contextPairs) => {
    const [portalInfoListSig2] = qwik.useLexicalScope();
    const portalInfo = {
      id,
      elementToTeleport,
      contextPairs: contextPairs || []
    };
    portalInfo.close$ = /* @__PURE__ */ qwik.inlinedQrl(function removePortalFromList() {
      const [portalInfo2, portalInfoListSig3] = qwik.useLexicalScope();
      portalInfoListSig3.value = portalInfoListSig3.value.filter((currentPortalInfo) => currentPortalInfo !== portalInfo2);
    }, "QwikUIProvider_component_useContextProvider_1_6BJUdV0RZj4", [
      portalInfo,
      portalInfoListSig2
    ]);
    portalInfo.contextPairs.push({
      id: closePortalContextId,
      value: portalInfo.close$
    });
    portalInfoListSig2.value = [
      ...portalInfoListSig2.value,
      portalInfo
    ];
    return portalInfo.close$;
  }, "QwikUIProvider_component_useContextProvider_fY0z1PeSWVo", [
    portalInfoListSig
  ]));
  return /* @__PURE__ */ qwik._jsxC(jsxRuntime.Fragment, {
    children: [
      /* @__PURE__ */ qwik._jsxC(qwik.Slot, null, 3, "kO_0"),
      portalInfoListSig.value.map((portalInfo) => /* @__PURE__ */ qwik._jsxC(Portal, {
        get id() {
          return portalInfo.id;
        },
        [qwik._IMMUTABLE]: {
          id: qwik._wrapProp(portalInfo, "id")
        }
      }, 3, portalInfo.id))
    ]
  }, 1, "kO_1");
}, "QwikUIProvider_component_BWbmln0puwQ"));
const Portal = /* @__PURE__ */ qwik.componentQrl(/* @__PURE__ */ qwik.inlinedQrl((props) => {
  const portalInfoList = qwik.useContext(portalInfoListContextId);
  const myPortalInfoList = portalInfoList.value.filter((portal) => portal.id === props.id);
  return /* @__PURE__ */ qwik._jsxC(jsxRuntime.Fragment, {
    children: myPortalInfoList.map((portalInfo) => /* @__PURE__ */ qwik._jsxC(qwik.Fragment, {
      get "data-qwikui-portal-id"() {
        return props.id;
      },
      children: /* @__PURE__ */ qwik._jsxC(WrapJsxInContext, {
        get elementToTeleport() {
          return portalInfo.elementToTeleport;
        },
        get contextPairs() {
          return portalInfo.contextPairs;
        },
        [qwik._IMMUTABLE]: {
          contextPairs: qwik._wrapProp(portalInfo, "contextPairs"),
          elementToTeleport: qwik._wrapProp(portalInfo, "elementToTeleport")
        }
      }, 3, "kO_2"),
      [qwik._IMMUTABLE]: {
        "data-qwikui-portal-id": qwik._fnSignal((p0) => p0.id, [
          props
        ], "p0.id")
      }
    }, 1, portalInfo.id))
  }, 1, "kO_3");
}, "Portal_component_OyYmgctigfo"));
const WrapJsxInContext = /* @__PURE__ */ qwik.componentQrl(/* @__PURE__ */ qwik.inlinedQrl((props) => {
  props.contextPairs.forEach(({ id, value }) => qwik.useContextProvider(id, value));
  return /* @__PURE__ */ qwik._jsxC(jsxRuntime.Fragment, {
    children: [
      props.elementToTeleport
    ].map((jsx) => jsx)
  }, 1, "kO_4");
}, "WrapJsxInContext_component_wWXsIsOqshw"));
exports.Portal = Portal;
exports.QwikUIProvider = QwikUIProvider;
exports.WrapJsxInContext = WrapJsxInContext;
exports._auto_portalInfoListContextId = portalInfoListContextId;
exports.closePortalContextId = closePortalContextId;
exports.openPortalContextId = openPortalContextId;
