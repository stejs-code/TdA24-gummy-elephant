import { componentQrl, inlinedQrl, useContext, useSignal, useVisibleTaskQrl, useLexicalScope, _jsxS, _jsxC, Slot, _fnSignal } from "@builder.io/qwik";
import AutocompleteContextId from "./autocomplete-context-id.qwik.mjs";
const AutocompleteTrigger = /* @__PURE__ */ componentQrl(/* @__PURE__ */ inlinedQrl(({ ...props }) => {
  const contextService = useContext(AutocompleteContextId);
  const triggerRefSig = useSignal();
  useVisibleTaskQrl(/* @__PURE__ */ inlinedQrl(function registerInputRefTask() {
    const [contextService2, triggerRefSig2] = useLexicalScope();
    contextService2.triggerRefSig.value = triggerRefSig2.value;
  }, "AutocompleteTrigger_component_useVisibleTask_WMHKcaf20DE", [
    contextService,
    triggerRefSig
  ]));
  return /* @__PURE__ */ _jsxS("button", {
    ...props,
    children: /* @__PURE__ */ _jsxC(Slot, null, 3, "h3_0"),
    // add their own custom onClick with our onClick functionality
    onClick$: [
      /* @__PURE__ */ inlinedQrl(() => {
        const [contextService2] = useLexicalScope();
        contextService2.isTriggerExpandedSig.value = !contextService2.isTriggerExpandedSig.value;
      }, "AutocompleteTrigger_component_button_onClick_Z5Ur56odKNw", [
        contextService
      ]),
      props.onClick$
    ],
    ref: triggerRefSig
  }, {
    "aria-controls": _fnSignal((p0) => p0.listBoxId, [
      contextService
    ], "p0.listBoxId"),
    "aria-expanded": _fnSignal((p0) => p0.isTriggerExpandedSig.value, [
      contextService
    ], "p0.isTriggerExpandedSig.value"),
    "aria-haspopup": "listbox",
    "aria-label": "listbox toggle trigger",
    id: _fnSignal((p0) => p0.triggerId, [
      contextService
    ], "p0.triggerId"),
    tabIndex: -1
  }, 0, "h3_1");
}, "AutocompleteTrigger_component_X4cPs5Kv8iA"));
export {
  AutocompleteTrigger
};
