import { componentQrl, inlinedQrl, useSignal, useContext, useVisibleTaskQrl, useLexicalScope, _jsxS, _fnSignal } from "@builder.io/qwik";
import AutocompleteContextId from "./autocomplete-context-id.qwik.mjs";
import { KeyCode } from "../../utils/key-code.type.qwik.mjs";
const autocompletePreventedKeys = [
  KeyCode.Home,
  KeyCode.End,
  KeyCode.PageDown,
  KeyCode.PageUp,
  KeyCode.ArrowDown,
  KeyCode.ArrowUp
];
const AutocompleteInput = /* @__PURE__ */ componentQrl(/* @__PURE__ */ inlinedQrl((props) => {
  const inputRefSig = useSignal();
  const contextService = useContext(AutocompleteContextId);
  useVisibleTaskQrl(/* @__PURE__ */ inlinedQrl(function registerInputRefTask() {
    const [contextService2, inputRefSig2] = useLexicalScope();
    contextService2.inputRefSig.value = inputRefSig2.value;
  }, "AutocompleteInput_component_useVisibleTask_thYHaSqtZmg", [
    contextService,
    inputRefSig
  ]));
  useVisibleTaskQrl(/* @__PURE__ */ inlinedQrl(function preventDefaultTask({ cleanup }) {
    const [inputRefSig2] = useLexicalScope();
    function keyHandler(e) {
      if (autocompletePreventedKeys.includes(e.key))
        e.preventDefault();
    }
    inputRefSig2.value?.addEventListener("keydown", keyHandler);
    cleanup(() => {
      inputRefSig2.value?.removeEventListener("keydown", keyHandler);
    });
  }, "AutocompleteInput_component_useVisibleTask_1_VyuLbo0324M", [
    inputRefSig
  ]));
  return /* @__PURE__ */ _jsxS("input", {
    ref: inputRefSig,
    ...props,
    onBlur$: /* @__PURE__ */ inlinedQrl(() => {
      const [contextService2] = useLexicalScope();
      contextService2.isInputFocusedSig.value = false;
    }, "AutocompleteInput_component_input_onBlur_ha9CF3bvY4U", [
      contextService
    ]),
    onFocus$: /* @__PURE__ */ inlinedQrl(() => {
      const [contextService2] = useLexicalScope();
      contextService2.isInputFocusedSig.value = true;
    }, "AutocompleteInput_component_input_onFocus_3I0ReN96s00", [
      contextService
    ]),
    "onInput$": /* @__PURE__ */ inlinedQrl((_, elm) => {
      const [contextService2] = useLexicalScope();
      return contextService2.inputValueSig.value = elm.value;
    }, "AutocompleteInput_component_input_bind_value_t722JOYUiD0", [
      contextService
    ]),
    onKeyDown$: [
      /* @__PURE__ */ inlinedQrl((e) => {
        const [contextService2] = useLexicalScope();
        if (e.key === "ArrowDown") {
          contextService2.isTriggerExpandedSig.value = true;
          contextService2.filteredOptionsStore[0]?.value?.focus();
        }
      }, "AutocompleteInput_component_input_onKeyDown_EuX8MfHcVXc", [
        contextService
      ]),
      props.onKeyDown$
    ]
  }, {
    "aria-autocomplete": "list",
    "aria-controls": _fnSignal((p0) => p0.listBoxId, [
      contextService
    ], "p0.listBoxId"),
    "aria-disabled": _fnSignal((p0) => p0["aria-disabled"] || false, [
      props
    ], 'p0["aria-disabled"]||false'),
    "aria-expanded": _fnSignal((p0) => p0.isTriggerExpandedSig.value, [
      contextService
    ], "p0.isTriggerExpandedSig.value"),
    "aria-haspopup": "listbox",
    "aria-invalid": _fnSignal((p0) => p0["aria-invalid"] || false, [
      props
    ], 'p0["aria-invalid"]||false'),
    "aria-label": _fnSignal((p0) => p0.labelRef.value ? void 0 : p0.inputValueSig.value, [
      contextService
    ], "p0.labelRef.value?undefined:p0.inputValueSig.value"),
    "aria-required": _fnSignal((p0) => p0["aria-required"] || false, [
      props
    ], 'p0["aria-required"]||false'),
    "data-autocomplete-input-id": _fnSignal((p0) => p0.inputId, [
      contextService
    ], "p0.inputId"),
    id: _fnSignal((p0) => p0.inputId, [
      contextService
    ], "p0.inputId"),
    role: "combobox",
    "value": contextService.inputValueSig
  }, 0, "uX_0");
}, "AutocompleteInput_component_0lwjKc4pIhE"));
export {
  AutocompleteInput,
  autocompletePreventedKeys as _auto_autocompletePreventedKeys
};
