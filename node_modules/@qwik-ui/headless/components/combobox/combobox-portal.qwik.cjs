"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const qwik = require("@builder.io/qwik");
const qwikUiProvider = require("../qwik-ui-provider/qwik-ui-provider.qwik.cjs");
const comboboxContextId = require("./combobox-context-id.qwik.cjs");
const ComboboxPortal = ({ children, contextIds }) => {
  return /* @__PURE__ */ qwik._jsxC(ComboboxPortalImpl, {
    contextIds,
    elementToTeleport: children
  }, 3, "SW_0");
};
const ComboboxPortalImpl = /* @__PURE__ */ qwik.componentQrl(/* @__PURE__ */ qwik.inlinedQrl((props) => {
  const contextPairsSig = qwik.useSignal([]);
  const comboboxContext = qwik.useContext(comboboxContextId);
  qwik.useTaskQrl(/* @__PURE__ */ qwik.inlinedQrl(async function syncContextIdsFromProps({ track }) {
    const [comboboxContext2, contextPairsSig2, props2] = qwik.useLexicalScope();
    const contextIdsFromProps = track(() => props2.contextIds);
    contextPairsSig2.value = [
      {
        id: comboboxContextId,
        value: comboboxContext2
      }
    ];
    contextIdsFromProps?.map((id) => {
      contextPairsSig2.value.push({
        id,
        value: qwik.useContext(id)
      });
    });
  }, "ComboboxPortalImpl_component_useTask_O0iKmVWZFuY", [
    comboboxContext,
    contextPairsSig,
    props
  ]));
  const openPortal$ = qwik.useContext(qwikUiProvider.openPortalContextId);
  const closePortalSig = qwik.useSignal();
  qwik.useVisibleTaskQrl(/* @__PURE__ */ qwik.inlinedQrl(async function openOrCloseListBox({ track }) {
    const [closePortalSig2, comboboxContext2, contextPairsSig2, openPortal$2, props2] = qwik.useLexicalScope();
    track(() => comboboxContext2.isListboxOpenSig.value);
    track(() => contextPairsSig2.value);
    if (comboboxContext2.isListboxOpenSig.value && contextPairsSig2.value)
      closePortalSig2.value = await openPortal$2(comboboxContext2.localId, props2.elementToTeleport, contextPairsSig2.value);
    else if (closePortalSig2.value) {
      const closePortal$ = closePortalSig2.value;
      await closePortal$();
    }
  }, "ComboboxPortalImpl_component_useVisibleTask_peF0T330C7I", [
    closePortalSig,
    comboboxContext,
    contextPairsSig,
    openPortal$,
    props
  ]));
  qwik.useVisibleTaskQrl(/* @__PURE__ */ qwik.inlinedQrl(async function cleanupTeleportedElement({ cleanup }) {
    const [closePortalSig2] = qwik.useLexicalScope();
    cleanup(async () => {
      if (closePortalSig2.value) {
        const closePortal$ = closePortalSig2.value;
        await closePortal$();
      }
    });
  }, "ComboboxPortalImpl_component_useVisibleTask_1_bHdBhXNkEjg", [
    closePortalSig
  ]));
  return /* @__PURE__ */ qwik._jsxC(qwik.Slot, null, 3, "SW_1");
}, "ComboboxPortalImpl_component_SqyclsCeWaA"));
exports.ComboboxPortal = ComboboxPortal;
exports.ComboboxPortalImpl = ComboboxPortalImpl;
