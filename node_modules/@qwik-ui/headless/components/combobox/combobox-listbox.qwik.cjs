"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const qwik = require("@builder.io/qwik");
const dom = require("@floating-ui/dom");
const comboboxContextId = require("./combobox-context-id.qwik.cjs");
const ComboboxListbox = /* @__PURE__ */ qwik.componentQrl(/* @__PURE__ */ qwik.inlinedQrl((props) => {
  const props1 = qwik._restProps(props, [
    "optionRenderer$",
    "gutter",
    "flip",
    "placement",
    "shift",
    "hide",
    "autoPlacement",
    "ancestorScroll",
    "ancestorResize",
    "elementResize",
    "animationFrame",
    "transform"
  ]);
  const context = qwik.useContext(comboboxContextId);
  const listboxId = `${context.localId}-listbox`;
  qwik.useVisibleTaskQrl(/* @__PURE__ */ qwik.inlinedQrl(function setFloatingUIConfig({ cleanup }) {
    const [context2, props2] = qwik.useLexicalScope();
    function updatePosition() {
      const middleware = [
        dom.offset(props2.gutter),
        dom.hide({
          strategy: props2.hide
        })
      ];
      const middlewareFunctions = [
        dom.flip,
        dom.shift,
        dom.autoPlacement
      ];
      const middlewareProps = [
        props2.flip ?? true,
        props2.shift,
        props2.autoPlacement ?? false
      ];
      middlewareFunctions.forEach((func, index) => {
        const isMiddlewareEnabled = middlewareProps[index];
        if (isMiddlewareEnabled)
          middleware.push(func());
      });
      dom.computePosition(context2.inputRef.value, context2.listboxRef.value, {
        placement: props2.placement ?? "bottom",
        middleware
      }).then((resolvedData) => {
        const { x, y } = resolvedData;
        if (context2.listboxRef.value)
          Object.assign(context2.listboxRef.value.style, {
            left: `${x}px`,
            top: `${y}px`,
            transform: props2.transform
          });
      });
    }
    if (context2.inputRef.value && context2.listboxRef.value) {
      updatePosition();
      const cleanupFunc = dom.autoUpdate(context2.inputRef.value, context2.listboxRef.value, updatePosition, {
        ancestorScroll: props2.ancestorScroll ?? true,
        ancestorResize: props2.ancestorResize ?? true,
        elementResize: props2.elementResize ?? true,
        animationFrame: props2.animationFrame ?? false
      });
      cleanup(() => {
        cleanupFunc();
      });
    }
  }, "ComboboxListbox_component_useVisibleTask_CC7IMsQgQvI", [
    context,
    props
  ]));
  return /* @__PURE__ */ qwik._jsxS("ul", {
    ...props1,
    children: context.filteredOptionsSig.value.map((resolved, filteredIndex) => props.optionRenderer$?.(resolved, filteredIndex)),
    id: listboxId,
    ref: context.listboxRef,
    style: {
      ...props1.style,
      position: "absolute"
    }
  }, {
    "aria-label": qwik._fnSignal((p0) => p0.labelRef.value ? p0.labelRef.value?.innerText : "Suggestions", [
      context
    ], 'p0.labelRef.value?p0.labelRef.value?.innerText:"Suggestions"'),
    role: "listbox"
  }, 0, "Jv_0");
}, "ComboboxListbox_component_oCbY22ovk0I"));
exports.ComboboxListbox = ComboboxListbox;
