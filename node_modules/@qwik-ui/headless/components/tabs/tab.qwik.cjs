"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const qwik = require("@builder.io/qwik");
const keyCode_type = require("../../utils/key-code.type.qwik.cjs");
const tabPanel = require("./tab-panel.qwik.cjs");
const tabsContextId = require("./tabs-context-id.qwik.cjs");
const TAB_ID_PREFIX = "_tab_";
const preventedKeys = [
  keyCode_type.KeyCode.Home,
  keyCode_type.KeyCode.End,
  keyCode_type.KeyCode.PageDown,
  keyCode_type.KeyCode.PageUp,
  keyCode_type.KeyCode.ArrowDown,
  keyCode_type.KeyCode.ArrowUp,
  keyCode_type.KeyCode.ArrowLeft,
  keyCode_type.KeyCode.ArrowRight
];
const Tab = /* @__PURE__ */ qwik.componentQrl(/* @__PURE__ */ qwik.inlinedQrl((props) => {
  const props1 = qwik._restProps(props, [
    "selectedClassName",
    "_extraClass",
    "tabId"
  ]);
  const contextService = qwik.useContext(tabsContextId.tabsContextId);
  const elementRefSig = qwik.useSignal();
  const fullTabElementId = contextService.tabsPrefix + TAB_ID_PREFIX + props.tabId;
  const fullPanelElementId = contextService.tabsPrefix + tabPanel.TAB_PANEL_ID_PREFIX + props.tabId;
  const selectedClassNameSig = qwik.useComputedQrl(/* @__PURE__ */ qwik.inlinedQrl(() => {
    const [contextService2, props2] = qwik.useLexicalScope();
    return props2.selectedClassName || contextService2.selectedClassName;
  }, "Tab_component_selectedClassNameSig_useComputed_Luo0iPtRX04", [
    contextService,
    props
  ]));
  const isSelectedSig = qwik.useComputedQrl(/* @__PURE__ */ qwik.inlinedQrl(() => {
    const [contextService2, props2] = qwik.useLexicalScope();
    return contextService2.selectedTabIdSig.value === props2.tabId;
  }, "Tab_component_isSelectedSig_useComputed_BLQOrekQcqE", [
    contextService,
    props
  ]));
  qwik.useVisibleTaskQrl(/* @__PURE__ */ qwik.inlinedQrl(function preventDefaultOnKeysVisibleTask({ cleanup }) {
    const [contextService2, elementRefSig2, props2] = qwik.useLexicalScope();
    function handler(event) {
      if (preventedKeys.includes(event.key))
        event.preventDefault();
      contextService2.onTabKeyDown$(event.key, props2.tabId);
    }
    elementRefSig2.value?.addEventListener("keydown", handler);
    cleanup(() => {
      elementRefSig2.value?.removeEventListener("keydown", handler);
    });
  }, "Tab_component_useVisibleTask_lBSiSWVU7wU", [
    contextService,
    elementRefSig,
    props
  ]));
  const selectIfAutomatic$ = /* @__PURE__ */ qwik.inlinedQrl(() => {
    const [contextService2, props2] = qwik.useLexicalScope();
    contextService2.selectIfAutomatic$(props2.tabId);
  }, "Tab_component_selectIfAutomatic_lwThVCy025Y", [
    contextService,
    props
  ]);
  const classNamesSig = qwik.useComputedQrl(/* @__PURE__ */ qwik.inlinedQrl(() => {
    const [isSelectedSig2, props2, selectedClassNameSig2] = qwik.useLexicalScope();
    return [
      props2._extraClass?.value ?? props2._extraClass,
      // TODO only given class if selected
      isSelectedSig2.value && [
        "selected",
        selectedClassNameSig2.value
      ]
    ];
  }, "Tab_component_classNamesSig_useComputed_pM4HfopD0LY", [
    isSelectedSig,
    props,
    selectedClassNameSig
  ]));
  return /* @__PURE__ */ qwik._jsxS("button", {
    ...props1,
    "aria-controls": fullPanelElementId,
    "aria-disabled": qwik._wrapSignal(props1, "disabled"),
    children: /* @__PURE__ */ qwik._jsxC(qwik.Slot, null, 3, "J8_0"),
    class: [
      props1.class?.value ?? props1.class,
      classNamesSig.value
    ],
    id: fullTabElementId,
    onClick$: [
      /* @__PURE__ */ qwik.inlinedQrl(() => {
        const [contextService2, props2] = qwik.useLexicalScope();
        return contextService2.selectTab$(props2.tabId);
      }, "Tab_component_button_onClick_IFqHcg6JGuU", [
        contextService,
        props
      ]),
      props1.onClick$
    ],
    onFocus$: [
      selectIfAutomatic$,
      props1.onFocus$
    ],
    onMouseEnter$: [
      selectIfAutomatic$,
      props1.onMouseEnter$
    ],
    ref: elementRefSig
  }, {
    "aria-selected": qwik._fnSignal((p0) => p0.value, [
      isSelectedSig
    ], "p0.value"),
    role: "tab",
    tabIndex: qwik._fnSignal((p0) => p0.value ? 0 : -1, [
      isSelectedSig
    ], "p0.value?0:-1"),
    type: "button"
  }, 0, "J8_1");
}, "Tab_component_YMTOyfPxkj4"));
exports.TAB_ID_PREFIX = TAB_ID_PREFIX;
exports.Tab = Tab;
exports._auto_preventedKeys = preventedKeys;
