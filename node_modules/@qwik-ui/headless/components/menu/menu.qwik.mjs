import { createContextId, componentQrl, inlinedQrl, useId, useSignal, useStore, useContextProvider, useVisibleTaskQrl, useLexicalScope, useOnWindow, _jsxQ, _fnSignal, _jsxC, Slot, _jsxBranch, useContext } from "@builder.io/qwik";
const MENU_CONTEXT_NAME = "qui-menu";
const quiMenuContext = createContextId(MENU_CONTEXT_NAME);
let KEYBOARD_KEY_NAME;
(function(KEYBOARD_KEY_NAME2) {
  KEYBOARD_KEY_NAME2["ARROW_UP"] = "ArrowUp";
  KEYBOARD_KEY_NAME2["ARROW_DOWN"] = "ArrowDown";
  KEYBOARD_KEY_NAME2["ESCAPE"] = "Escape";
})(KEYBOARD_KEY_NAME || (KEYBOARD_KEY_NAME = {}));
let CSS_CLASS_NAMES;
(function(CSS_CLASS_NAMES2) {
  CSS_CLASS_NAMES2["IS_EXPANDED"] = "quiIsExpanded";
  CSS_CLASS_NAMES2["IS_FOCUSED"] = "quiIsFocused";
  CSS_CLASS_NAMES2["IS_HOVERED"] = "quiIsHovered";
})(CSS_CLASS_NAMES || (CSS_CLASS_NAMES = {}));
const Menu = /* @__PURE__ */ componentQrl(/* @__PURE__ */ inlinedQrl((props) => {
  const parentId = useId();
  const childId = useId();
  const isExpanded = useSignal(props?.isExpanded || false);
  const isHovered = useSignal(false);
  const container = useSignal();
  const children = useStore([]);
  const currentButtonInFocusIndex = useSignal(-1);
  const triggerElementRef = useSignal();
  const currentId = useSignal("");
  const menuContextService = {
    currentId
  };
  useContextProvider(quiMenuContext, menuContextService);
  useVisibleTaskQrl(/* @__PURE__ */ inlinedQrl(({ track }) => {
    const [currentButtonInFocusIndex2, currentId2, isExpanded2] = useLexicalScope();
    track(() => isExpanded2.value);
    if (!isExpanded2.value) {
      currentButtonInFocusIndex2.value = -1;
      currentId2.value = "";
    }
  }, "Menu_component_useVisibleTask_z5TUX3lfqYo", [
    currentButtonInFocusIndex,
    currentId,
    isExpanded
  ]));
  useVisibleTaskQrl(/* @__PURE__ */ inlinedQrl(() => {
    const [children2, container2] = useLexicalScope();
    const options = container2.value?.querySelectorAll("button");
    if (options?.length)
      options.forEach((option) => children2.push(option));
  }, "Menu_component_useVisibleTask_1_nW9Eu00kceY", [
    children,
    container
  ]));
  useOnWindow("click", /* @__PURE__ */ inlinedQrl((event) => {
    const [isExpanded2, triggerElementRef2] = useLexicalScope();
    const target = event.target;
    if (isExpanded2.value && target !== triggerElementRef2.value)
      isExpanded2.value = false;
  }, "Menu_component_useOnWindow_ZOEh0cr01Zo", [
    isExpanded,
    triggerElementRef
  ]));
  return /* @__PURE__ */ _jsxQ("div", {
    class: [
      props.class,
      {
        [CSS_CLASS_NAMES.IS_EXPANDED]: isExpanded.value,
        [CSS_CLASS_NAMES.IS_HOVERED]: isHovered.value
      }
    ]
  }, {
    id: parentId,
    onKeyDown$: /* @__PURE__ */ inlinedQrl((event) => {
      const [children2, currentButtonInFocusIndex2, currentId2, isExpanded2, triggerElementRef2] = useLexicalScope();
      if (event.key === KEYBOARD_KEY_NAME.ESCAPE && isExpanded2.value) {
        isExpanded2.value = false;
        triggerElementRef2.value?.focus();
        return;
      }
      if (event.key === KEYBOARD_KEY_NAME.ARROW_DOWN || event.key === KEYBOARD_KEY_NAME.ARROW_UP) {
        let idx = currentButtonInFocusIndex2.value;
        if (event.key === KEYBOARD_KEY_NAME.ARROW_DOWN) {
          idx = currentButtonInFocusIndex2.value + 1;
          if (idx >= children2.length)
            idx = 0;
        } else if (event.key === KEYBOARD_KEY_NAME.ARROW_UP) {
          idx = currentButtonInFocusIndex2.value - 1;
          if (idx < 0)
            idx = children2.length - 1;
        }
        children2[idx].focus();
        currentId2.value = children2[idx].id;
        currentButtonInFocusIndex2.value = idx;
      }
    }, "Menu_component_div_onKeyDown_ImVFKNhBMvE", [
      children,
      currentButtonInFocusIndex,
      currentId,
      isExpanded,
      triggerElementRef
    ]),
    onMouseEnter$: /* @__PURE__ */ inlinedQrl(() => {
      const [isHovered2] = useLexicalScope();
      return isHovered2.value = true;
    }, "Menu_component_div_onMouseEnter_Un3HTfrqbP4", [
      isHovered
    ]),
    onMouseLeave$: /* @__PURE__ */ inlinedQrl(() => {
      const [isHovered2] = useLexicalScope();
      return isHovered2.value = false;
    }, "Menu_component_div_onMouseLeave_ehS07sC621w", [
      isHovered
    ])
  }, [
    /* @__PURE__ */ _jsxQ("button", {
      ref: triggerElementRef
    }, {
      "aria-controls": _fnSignal((p0, p1) => p1.value ? p0 : "", [
        childId,
        isExpanded
      ], 'p1.value?p0:""'),
      "aria-expanded": _fnSignal((p0) => p0.value, [
        isExpanded
      ], "p0.value"),
      "aria-haspopup": true,
      onClick$: /* @__PURE__ */ inlinedQrl(() => {
        const [isExpanded2] = useLexicalScope();
        return isExpanded2.value = !isExpanded2.value;
      }, "Menu_component_div_button_onClick_s7AfHHK96OE", [
        isExpanded
      ])
    }, _fnSignal((p0) => p0.triggerElement || "Menu", [
      props
    ], 'p0.triggerElement||"Menu"'), 3, null),
    /* @__PURE__ */ _jsxQ("nav", {
      ref: container
    }, {
      "aria-labelledby": parentId,
      id: childId,
      role: "menu",
      style: _fnSignal((p0) => ({
        visibility: p0.value ? "visible" : "hidden"
      }), [
        isExpanded
      ], '{visibility:p0.value?"visible":"hidden"}')
    }, /* @__PURE__ */ _jsxC(Slot, null, 3, "nG_0"), 1, null)
  ], 1, "nG_1");
}, "Menu_component_GMwdTIoT1z4"));
const MenuItem = /* @__PURE__ */ componentQrl(/* @__PURE__ */ inlinedQrl((props) => {
  _jsxBranch();
  const myId = useId();
  const contextService = useContext(quiMenuContext);
  const isFocused = contextService.currentId.value === myId;
  return /* @__PURE__ */ _jsxQ("div", null, {
    class: _fnSignal((p0) => p0.class, [
      props
    ], "p0.class")
  }, props.onClick$ ? /* @__PURE__ */ _jsxQ("button", {
    class: {
      [CSS_CLASS_NAMES.IS_FOCUSED]: isFocused
    },
    onClick$: props.onClick$
  }, {
    disabled: _fnSignal((p0) => p0.disabled || false, [
      props
    ], "p0.disabled||false"),
    id: myId,
    tabIndex: -1
  }, /* @__PURE__ */ _jsxC(Slot, null, 3, "nG_2"), 0, "nG_3") : /* @__PURE__ */ _jsxC(Slot, null, 3, "nG_4"), 1, "nG_5");
}, "MenuItem_component_Wd5FkIK10wk"));
export {
  CSS_CLASS_NAMES,
  KEYBOARD_KEY_NAME,
  Menu,
  MenuItem,
  quiMenuContext
};
