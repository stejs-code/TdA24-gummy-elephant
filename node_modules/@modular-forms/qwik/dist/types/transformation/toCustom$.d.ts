import { type QRL } from '@builder.io/qwik';
import type { FieldValue, TransformField } from '../types';
/**
 * Value type of the transform mode.
 */
export type TransformMode = 'input' | 'change' | 'blur';
/**
 * Value type of the transform options.
 */
export type TransformOptions = {
    on: TransformMode;
};
/**
 * See {@link toCustom$}
 */
export declare function toCustomQrl<TFieldValue extends FieldValue>(action: QRL<TransformField<TFieldValue>>, { on: mode }: TransformOptions): QRL<TransformField<TFieldValue>>;
/**
 * Creates a custom transformation functions.
 *
 * @param action The transform action.
 * @param options The transform options.
 *
 * @returns A transformation functions.
 */
export declare const toCustom$: <TFieldValue extends FieldValue>(first: TransformField<TFieldValue>, rest_0: TransformOptions) => QRL<TransformField<TFieldValue>>;
