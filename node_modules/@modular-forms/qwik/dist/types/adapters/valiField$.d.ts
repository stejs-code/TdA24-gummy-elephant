import { type QRL } from '@builder.io/qwik';
import type { BaseSchema, BaseSchemaAsync } from 'valibot';
import type { FieldValue, MaybeFunction, ValidateField } from '../types';
/**
 * See {@link valiField$}
 */
export declare function valiFieldQrl<TFieldValue extends FieldValue>(schema: QRL<MaybeFunction<BaseSchema<TFieldValue, any> | BaseSchemaAsync<TFieldValue, any>>>): QRL<ValidateField<TFieldValue>>;
/**
 * Creates a validation functions that parses the Valibot schema of a field.
 *
 * @param schema A Valibot schema.
 *
 * @returns A validation function.
 */
export declare const valiField$: <TFieldValue extends FieldValue>(first: MaybeFunction<BaseSchema<TFieldValue, any> | BaseSchemaAsync<TFieldValue, any>>) => QRL<ValidateField<TFieldValue>>;
