import { type QRL } from '@builder.io/qwik';
import type { BaseSchema, BaseSchemaAsync } from 'valibot';
import type { FieldValues, MaybeFunction, ValidateForm } from '../types';
/**
 * See {@link valiForm$}
 */
export declare function valiFormQrl<TFieldValues extends FieldValues>(schema: QRL<MaybeFunction<BaseSchema<TFieldValues, any> | BaseSchemaAsync<TFieldValues, any>>>): QRL<ValidateForm<TFieldValues>>;
/**
 * Creates a validation functions that parses the Valibot schema of a form.
 *
 * @param schema A Valibot schema.
 *
 * @returns A validation function.
 */
export declare const valiForm$: <TFieldValues extends FieldValues>(first: MaybeFunction<BaseSchema<TFieldValues, any> | BaseSchemaAsync<TFieldValues, any>>) => QRL<ValidateForm<TFieldValues>>;
