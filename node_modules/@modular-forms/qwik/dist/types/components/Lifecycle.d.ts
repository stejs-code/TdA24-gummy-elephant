import { type PublicProps, type JSXNode, type QRL } from '@builder.io/qwik';
import type { FieldArrayPath, FieldArrayStore, FieldPath, FieldPathValue, FieldStore, FieldValues, FormStore, Maybe, MaybeArray, ResponseData, TransformField, ValidateField, ValidateFieldArray } from '../types';
/**
 * Value type of the lifecycle properties.
 */
type LifecycleProps<TFieldValues extends FieldValues, TResponseData extends ResponseData, TFieldName extends FieldPath<TFieldValues>, TFieldArrayName extends FieldArrayPath<TFieldValues>> = {
    key: string | number;
    of: FormStore<TFieldValues, TResponseData>;
    store: FieldStore<TFieldValues, TFieldName> | FieldArrayStore<TFieldValues, TFieldArrayName>;
    validate?: Maybe<MaybeArray<QRL<ValidateField<FieldPathValue<TFieldValues, TFieldName>>>> | MaybeArray<QRL<ValidateFieldArray<number[]>>>>;
    transform?: Maybe<MaybeArray<QRL<TransformField<FieldPathValue<TFieldValues, TFieldName>>>>>;
    keepActive?: Maybe<boolean>;
    keepState?: Maybe<boolean>;
};
/**
 * Component that handles the lifecycle dependent state of a field or field
 * array.
 */
export declare const Lifecycle: <TFieldValues extends FieldValues, TResponseData extends ResponseData, TFieldName extends FieldPath<TFieldValues>, TFieldArrayName extends FieldArrayPath<TFieldValues>>(props: PublicProps<LifecycleProps<TFieldValues, TResponseData, TFieldName, TFieldArrayName>>, key: string | null, flags: number) => JSXNode | null;
export {};
